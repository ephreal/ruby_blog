<p id="notice"><%= notice %></p>

<p>
  <strong>Title:</strong>
  <%= @post.title %>
</p>
<p>
  <strong>Body:</strong>
  <%= @post.body  %>
</p>

<div id="comments">
    <% if @post.comments.present? %>

        <h1>Comments</h1>

        <% @post.comments.each do |comment| %>
        <%= render partial: "comments/comment", locals: {comment: comment} %>
        <% end %>

        <% # Alternatively, instead of using a loop with the above render method, the following could be used %>
        <% # render partial: "comments/comment", collection: @post.comments, as: :comment %>
        <% # If even more code condensing is desired, the "as: :comment" could be left off too. %>
        <% # Rails automatically assigns the current item to a local variable the same name as the partial %>
        <% # To be super extra, just pass %>
        <% # render @posts.comments %>
        <% # and render will notice it receive a ton of comment objects. It'll then check the views %>
        <% # directory for a partial called comments and try use it. ONLY use it if you know what %>
        <% # you are doing. %>
    <% end %>
</div>

<h2>Add a Comment</h2>
    <%= render partial: "comments/form", locals: {comment: @post.comments.new} %>

<%= link_to 'Edit', edit_post_path(@post) %> |
<%= link_to 'Back', posts_path %>
